# Generated by Django 3.2.7 on 2021-09-12 10:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import gnmproj.apps.gnm.src.fields
import gnmproj.apps.gnm.src.neuralmodule.metrics
import gnmproj.apps.gnm.src.neuralmodule.network


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CrossValidation',
            fields=[
                ('id', gnmproj.apps.gnm.src.fields.UUIDAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=63, verbose_name='name')),
            ],
            options={
                'verbose_name': 'cross-validation',
                'verbose_name_plural': 'cross-validations',
            },
        ),
        migrations.CreateModel(
            name='Deposit',
            fields=[
                ('id', gnmproj.apps.gnm.src.fields.UUIDAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=63, unique=True, verbose_name='name')),
                ('owners', models.ManyToManyField(related_name='deposits', to=settings.AUTH_USER_MODEL, verbose_name='owners')),
            ],
            options={
                'verbose_name': 'deposit',
                'verbose_name_plural': 'deposits',
            },
        ),
        migrations.CreateModel(
            name='KnownBlock',
            fields=[
                ('id', gnmproj.apps.gnm.src.fields.UUIDAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.FloatField(verbose_name='x')),
                ('y', models.FloatField(verbose_name='y')),
                ('z', models.FloatField(verbose_name='z')),
                ('size', models.FloatField(verbose_name='size')),
            ],
            options={
                'verbose_name': 'known block',
                'verbose_name_plural': 'known blocks',
            },
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', gnmproj.apps.gnm.src.fields.UUIDAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=63, unique=True, verbose_name='name')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('mtype', models.CharField(choices=[('c', 'class stat'), ('o', 'overall stat')], max_length=1, verbose_name='metric type')),
            ],
            options={
                'verbose_name': 'metric',
                'verbose_name_plural': 'metrics',
            },
        ),
        migrations.CreateModel(
            name='NeuralModel',
            fields=[
                ('id', gnmproj.apps.gnm.src.fields.UUIDAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block_size', models.FloatField(verbose_name='block_size')),
                ('max_epochs', models.IntegerField(verbose_name='max_epochs')),
                ('dump', models.BinaryField(null=True)),
                ('cross_validation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='neural_models', to='gnm.crossvalidation', verbose_name='cross-validation')),
                ('deposit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='neural_models', to='gnm.deposit', verbose_name='deposit')),
            ],
            options={
                'verbose_name': 'neural model',
                'verbose_name_plural': 'neural models',
            },
        ),
        migrations.CreateModel(
            name='NeuralModelMetricValues',
            fields=[
                ('id', gnmproj.apps.gnm.src.fields.UUIDAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epoch', models.IntegerField(verbose_name='epoch')),
                ('value', models.TextField(verbose_name='value')),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='gnm.metric', verbose_name='metric')),
                ('neural_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metric_values', to='gnm.neuralmodel', verbose_name='neural model')),
            ],
            options={
                'verbose_name': 'neural model metric value',
                'verbose_name_plural': 'neural model metric values',
            },
        ),
        migrations.CreateModel(
            name='PredictedBlock',
            fields=[
                ('id', gnmproj.apps.gnm.src.fields.UUIDAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.FloatField(verbose_name='x')),
                ('y', models.FloatField(verbose_name='y')),
                ('z', models.FloatField(verbose_name='z')),
            ],
            options={
                'verbose_name': 'predicted block',
                'verbose_name_plural': 'predicted blocks',
            },
        ),
        migrations.CreateModel(
            name='Well',
            fields=[
                ('id', gnmproj.apps.gnm.src.fields.UUIDAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('head_x', models.FloatField(verbose_name='head_x')),
                ('head_y', models.FloatField(verbose_name='head_y')),
                ('head_z', models.FloatField(verbose_name='head_z')),
                ('tail_x', models.FloatField(verbose_name='tail_x')),
                ('tail_y', models.FloatField(verbose_name='tail_y')),
                ('tail_z', models.FloatField(verbose_name='tail_z')),
                ('deposit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wells', to='gnm.deposit', verbose_name='deposit')),
            ],
            options={
                'verbose_name': 'well',
                'verbose_name_plural': 'wells',
            },
        ),
        migrations.CreateModel(
            name='NeuralNetwork',
            fields=[
                ('neuralmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gnm.neuralmodel')),
            ],
            bases=('gnm.neuralmodel', gnmproj.apps.gnm.src.neuralmodule.network.NeuralNetwork),
        ),
        migrations.CreateModel(
            name='PYCMMetricValue',
            fields=[
                ('neuralmodelmetricvalues_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gnm.neuralmodelmetricvalues')),
            ],
            bases=('gnm.neuralmodelmetricvalues', gnmproj.apps.gnm.src.neuralmodule.metrics.Metric),
        ),
        migrations.CreateModel(
            name='WellInterval',
            fields=[
                ('id', gnmproj.apps.gnm.src.fields.UUIDAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField(default=0, verbose_name='position')),
                ('from_x', models.FloatField(verbose_name='from_x')),
                ('from_y', models.FloatField(verbose_name='from_y')),
                ('from_z', models.FloatField(verbose_name='from_z')),
                ('to_x', models.FloatField(verbose_name='to_x')),
                ('to_y', models.FloatField(verbose_name='to_y')),
                ('to_z', models.FloatField(verbose_name='to_z')),
                ('well', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='intervals', to='gnm.well', verbose_name='well')),
            ],
            options={
                'verbose_name': 'well interval',
                'verbose_name_plural': 'well intervals',
            },
        ),
        migrations.CreateModel(
            name='Rock',
            fields=[
                ('id', gnmproj.apps.gnm.src.fields.UUIDAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField(default=0, verbose_name='index')),
                ('name', models.CharField(max_length=63, verbose_name='name')),
                ('color', models.CharField(blank=True, default='', max_length=7, verbose_name='color')),
                ('deposit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rocks', to='gnm.deposit', verbose_name='deposit')),
            ],
            options={
                'verbose_name': 'rock',
                'verbose_name_plural': 'rocks',
            },
        ),
        migrations.CreateModel(
            name='PredictedBlockOutputs',
            fields=[
                ('id', gnmproj.apps.gnm.src.fields.UUIDAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(verbose_name='value')),
                ('predicted_block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outputs', to='gnm.predictedblock', verbose_name='predicted_block')),
                ('rock', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='gnm.rock', verbose_name='rock')),
            ],
            options={
                'verbose_name': 'predicted block output',
                'verbose_name_plural': 'predicted block outputs',
            },
        ),
        migrations.AddField(
            model_name='predictedblock',
            name='content',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='gnm.rock', verbose_name='content'),
        ),
        migrations.AddField(
            model_name='predictedblock',
            name='known_block',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='predicted_blocks', to='gnm.knownblock', verbose_name='known_block'),
        ),
        migrations.AddField(
            model_name='predictedblock',
            name='neural_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predicted_blocks', to='gnm.neuralmodel', verbose_name='neural_model'),
        ),
        migrations.AddField(
            model_name='neuralmodelmetricvalues',
            name='rock',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='class_stat_values', to='gnm.rock', verbose_name='rock'),
        ),
        migrations.AddField(
            model_name='neuralmodel',
            name='excluded_wells',
            field=models.ManyToManyField(related_name='excluded_in', to='gnm.Well', verbose_name='excluded wells'),
        ),
        migrations.AddField(
            model_name='knownblock',
            name='content',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='gnm.rock', verbose_name='content'),
        ),
        migrations.AddField(
            model_name='knownblock',
            name='well',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='known_blocks', to='gnm.well', verbose_name='well'),
        ),
        migrations.CreateModel(
            name='DepositBorders',
            fields=[
                ('id', gnmproj.apps.gnm.src.fields.UUIDAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point_type', models.CharField(choices=[('min', 'minimum'), ('max', 'maximum')], max_length=3, verbose_name='point type')),
                ('x', models.FloatField(verbose_name='x')),
                ('y', models.FloatField(verbose_name='y')),
                ('z', models.FloatField(verbose_name='z')),
                ('deposit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='borders', to='gnm.deposit', verbose_name='deposit')),
            ],
            options={
                'verbose_name': 'deposit border',
                'verbose_name_plural': 'deposit borders',
            },
        ),
        migrations.AddConstraint(
            model_name='wellinterval',
            constraint=models.UniqueConstraint(fields=('well', 'position'), name='unique well and position'),
        ),
        migrations.AddConstraint(
            model_name='rock',
            constraint=models.UniqueConstraint(fields=('deposit', 'index'), name='unique deposit and index'),
        ),
        migrations.AddConstraint(
            model_name='predictedblock',
            constraint=models.UniqueConstraint(fields=('neural_model', 'x', 'y', 'z'), name='unique neural_model, x, y, z'),
        ),
        migrations.AddConstraint(
            model_name='neuralmodelmetricvalues',
            constraint=models.UniqueConstraint(fields=('neural_model', 'metric', 'epoch', 'rock'), name='unique meural_model, metric epoch, rock'),
        ),
        migrations.AddConstraint(
            model_name='knownblock',
            constraint=models.UniqueConstraint(fields=('well', 'size', 'x', 'y', 'z'), name='unique well, size, x, y, z'),
        ),
        migrations.AddConstraint(
            model_name='depositborders',
            constraint=models.UniqueConstraint(fields=('deposit', 'point_type'), name='unique deposit and point_type'),
        ),
    ]
